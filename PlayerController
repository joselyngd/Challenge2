//https://github.com/joselyngd/Challenge2/blob/master/PlayerController

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class PlayerController : MonoBehaviour
{
    public Animator anim;
    private Rigidbody2D rb2d;
    private bool facingRight = true;

    public float speed = 10;
    public float jumpforce = 20;
    public float gravity = 9.8f;

    //ground check
    private bool isOnGround;
    public Transform groundcheck;
    public float checkRadius;
    public LayerMask allGround;

    private float jumpTimeCounter;
    public float jumpTime;
    private bool isJumping;

    private int count;              //Integer to store the number of pickups collected so far.

    //This handles an internal timer
    private float timer;
    private int wholetime;

    public Text countText;
    public Text winText;


    private AudioSource source;
    private float volLowRange = 0.5f;
    private float volHighRange = 1.0f;


    public AudioClip endSound;

    public void Update()
    {
        if (Input.GetKeyDown(KeyCode.Escape))
        {
            Application.Quit();
        }
    }


    // Use this for initialization
    void Start()
    {
        anim = GetComponent<Animator>();
        anim.SetBool("isDead", false);

            rb2d = GetComponent<Rigidbody2D>();

            count = 0;

            //Initialze winText to a blank string since we haven't won yet at beginning.
            winText.text = "";

            //Call our SetCountText function which will update the text with the current value for count.
            SetCountText();
    }

    void Awake()
    {

        source = GetComponent<AudioSource>();

            if (Input.GetKey("escape"))
            {
                Application.Quit();
            }

    }


    // Update is called once per frame
    void FixedUpdate()
    {

        float moveHorizontal = Input.GetAxis("Horizontal");

        Vector2 movement = new Vector2(moveHorizontal, 0);

        rb2d.AddForce(movement * speed);

        rb2d.velocity = new Vector2(moveHorizontal * speed, rb2d.velocity.y);

        isOnGround = Physics2D.OverlapCircle(groundcheck.position, checkRadius, allGround);

        Debug.Log(isOnGround);


        //stuff I added to flip my character
        if (facingRight == false && moveHorizontal > 0)
        {
            Flip();
        }
        else if (facingRight == true && moveHorizontal < 0)
        {
            Flip();
        }

    }

     void OnTriggerEnter2D(Collider2D other)
    {
        if (other.gameObject.CompareTag("Coin"))
        {

            other.gameObject.SetActive(false);
            count = count + 1;
            SetCountText();
        }

        if (other.gameObject.CompareTag("EndGame"))
        {
            float vol = Random.Range(volLowRange, volHighRange);
            source.PlayOneShot(endSound);

        }
    }

    void Flip()
    {
        facingRight = !facingRight;
        Vector2 Scaler = transform.localScale;
        Scaler.x = Scaler.x * -1;
        transform.localScale = Scaler;
    }

    private void OnCollisionStay2D(Collision2D collision)
    {
        if (collision.collider.tag == "Ground" && isOnGround)
        {


            if (Input.GetKey(KeyCode.Space))
            {


                rb2d.AddForce(new Vector2(0, jumpforce), ForceMode2D.Impulse);
                rb2d.velocity = Vector2.up * jumpforce;




            }
        }
    }


    void SetCountText()
    {
        countText.text = "Count: " + count.ToString();
        if (count >= 8)
        {
            winText.text = "Nice!";
        }
    }
}
